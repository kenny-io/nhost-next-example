import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useQuery, gql, useMutation } from "@apollo/client";
import { useState } from "react";
import Todos from "../components/Todos";
import { useAuthQuery } from "@nhost/react-apollo";
import {
  useAuthenticated,
  useSignInEmailPassword,
  useSignOut,
} from "@nhost/nextjs";

const GET_TODOS = gql`
  query {
    todos {
      title
      todo_id
      completed
    }
  }
`;

const ADD_TODO = gql`
  mutation AddTodoMutation($todo: todos_insert_input!) {
    insert_todos(objects: [$todo]) {
      affected_rows
    }
  }
`;

export default function Home() {
  const { data, loading, error } = useAuthQuery(GET_TODOS);
  const [todoTitle, setTodoTitle] = useState("");
  const [insertTodo] = useMutation(ADD_TODO);
  const isAuthenticated = useAuthenticated();
  const signOut = useSignOut();

  const { signInEmailPassword } = useSignInEmailPassword(
    "hello@kenny.engineer",
    "1234567890"
  );

  const handleSignOut = () => {
    signOut.signOut();
    console.log("User is signed out");
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    try {
      insertTodo({
        variables: {
          todo: {
            title: todoTitle,
          },
        },
      });
      setTodoTitle("");

      console.log("Todo Inserted");
    } catch (error) {
      console.log(error);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Todo </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Create Nhost <a href="https://nextjs.org">Todos!</a>
        </h1>

        <form className={styles.form} onSubmit={handleSubmit}>
          <input
            type="text"
            value={todoTitle}
            onChange={(e) => setTodoTitle(e.target.value)}
            placeholder=" Enter a todo item"
            className={styles.input}
          />
        </form>

        {isAuthenticated ? (
          <button className={styles.button} onClick={handleSignOut}>
            Sign Out{" "}
          </button>
        ) : (
          <button className={styles.button} onClick={signInEmailPassword}>
            Sign In{" "}
          </button>
        )}

        {data ? (
          //render todos
          <Todos loading={loading} error={error} data={data} />
        ) : (
          <h2>No Data</h2>
        )}
      </main>
    </div>
  );
}
